<Page
    x:Class="Zhihu.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Zhihu.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    
    mc:Ignorable="d"
    
    xmlns:controls="using:Zhihu.Controls"
    xmlns:itemView="using:Zhihu.Controls.ItemView"
    xmlns:refresh="using:PullToRefresh.UWP"
    
    NavigationCacheMode="Enabled"
    Background="{StaticResource PageBackBrush}"
    DataContext="{Binding Path=Main, Mode=OneWay, Source={StaticResource Locator}}">

    <Page.Resources>
        <Storyboard x:Name="LeaveTipEaseOut">
            <DoubleAnimationUsingKeyFrames Duration="0:0:2" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LeaveTip">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LeaveTip">
                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
                <DiscreteObjectKeyFrame KeyTime="0:0:2">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Collapsed</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding CheckTheme, Mode=OneWay}"/>
            <core:InvokeCommandAction Command="{Binding CheckReview, Mode=OneWay}"/>
            <core:InvokeCommandAction Command="{Binding GetProfile, Mode=OneWay}"/>

            <!--<core:InvokeCommandAction Command="{Binding PromptContribute, Mode=OneWay}"/>-->
            <core:InvokeCommandAction Command="{Binding PromptPay, Mode=OneWay}"/>

            <core:InvokeCommandAction Command="{Binding CheckNotify, Mode=OneWay}"/>

            <core:InvokeCommandAction Command="{Binding Feeds.Load, Mode=OneWay}"/>

            <core:InvokeCommandAction Command="{Binding Find.GetBanner, Mode=OneWay}"/>

            <core:InvokeCommandAction Command="{Binding Notify.CheckFollows, Mode=OneWay}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition x:Name="MasterColumn" Width="*"/>
            <ColumnDefinition x:Name="DetailColumn" Width="0"/>
        </Grid.ColumnDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveStates" CurrentStateChanged="AdaptiveStates_CurrentStateChanged">
                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterColumn.Width" Value="600"/>
                        <Setter Target="DetailColumn.Width" Value="*"/>
                        <Setter Target="NavMenuList.Visibility" Value="Visible"/>
                        <Setter Target="NavCommandBar.Visibility" Value="Collapsed"/>
                        <Setter Target="FrameContainer.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MasterColumn.Width" Value="*"/>
                        <Setter Target="DetailColumn.Width" Value="0"/>
                        <Setter Target="NavMenuList.Visibility" Value="Collapsed"/>
                        <Setter Target="NavCommandBar.Visibility" Value="Visible"/>
                        <Setter Target="FrameContainer.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ListBox x:Name="NavMenuList" ItemsSource="{Binding MenuItems}" Grid.Row="0" Grid.Column="0" Visibility="Collapsed"
                         SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay, Converter={StaticResource ObjectToMenuItemConverter}}"
                         ItemContainerStyle="{StaticResource MenuListBoxItemStyle}"
                         SelectionChanged="ListBox_SelectionChanged">
            <ListBox.ItemTemplate>
                <DataTemplate x:DataType="controls:MenuItem">
                    <StackPanel Orientation="Horizontal" Height="48">
                        <SymbolIcon Symbol="{Binding Icon, Mode=OneWay}" Style="{StaticResource SymbolIconStyle}"/>
                        <!--<TextBlock Grid.Column="1" Text="{Binding Title, Mode=OneWay}" Style="{StaticResource MenuTitleTextBlockStyle}" />-->
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Frame x:Name="MasterFrame" Grid.Row="0" Grid.Column="1" SourcePageType="{Binding SelectedPageType, Mode=TwoWay}" />

        <CommandBar x:Name="NavCommandBar" Visibility="Visible" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ClosedDisplayMode="Compact"
                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                    IsOpen="False" IsSticky="False"
                    Background="{StaticResource AppBarBackBrush}"
                    Foreground="{StaticResource AppBarForeBrush}">
            <AppBarButton Icon="Home" Label="首页" Tapped="AppBarButton_Home_Tapped">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:InvokeCommandAction Command="{Binding FeedsTappd, Mode=OneWay}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton Icon="Globe" Label="发现" Tapped="AppBarButton_Find_Tapped">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:InvokeCommandAction Command="{Binding FindTapped, Mode=OneWay}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <controls:NotifyAppBarButton Icon="Message" Label="消息" NotifyMarkVisiable="{Binding NotifyVisible}"
                                         Tapped="AppBarButton_Message_Tapped">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:InvokeCommandAction Command="{Binding NoteTapped, Mode=OneWay}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:NotifyAppBarButton>
            <AppBarButton Icon="Contact" Label="个人" Tapped="AppBarButton_Me_Tapped">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Tapped">
                        <core:InvokeCommandAction Command="{Binding PersonalTapped, Mode=OneWay}"/>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton Icon="Refresh" Label="刷新">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding Feeds.Refresh, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton Icon="Switch" Foreground="{StaticResource AppBarForeBrush}"
                              Label="{Binding NightModeOn, Converter={StaticResource NightModeConverter}, ConverterParameter={Binding IsFormalVip}}"
                              Tapped="SwitchThemeButton_Tapped">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding SwitchTheme, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton Icon="GoToStart" Label="返回顶部" Tapped="FeedsGoToTop_Tapped"/>
                <AppBarButton Icon="GoToStart" Label="隐私策略" Tapped="PrivacyPolicy_Tapped"/>
                <AppBarButton Icon="GoToStart" Label="关于" Tapped="AppAbout_Tapped"/>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <Grid x:Name="FrameContainer" Grid.Row="0" Grid.RowSpan="2" Grid.Column="2"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Frame x:Name="PreviewFrame" CacheSize="50"/>
        </Grid>

        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                HorizontalAlignment="Center" VerticalAlignment="Center" 
                BorderBrush="{StaticResource LineBrush}" 
                Visibility="{Binding RemindReviewVisible}">
            <Grid Width="340" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{StaticResource FlyoutBackBrush}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <RichTextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" TextWrapping="Wrap" IsTextSelectionEnabled="False"
                               FontSize="22" 
                               Foreground="{StaticResource FirstForeBrush}">
                    <RichTextBlock.Blocks>
                        <Paragraph Margin="12 24 12 24">
                            <LineBreak/>
                            <Run Text="Hi，1% ers，ZhiHu Pro终于完成了客户端主要功能。"/>
                            <LineBreak/>
                            <LineBreak/>
                            <Run Text="请给我一个五星鼓励吧！！！"/>
                            <LineBreak/>
                            <LineBreak/>
                        </Paragraph>
                    </RichTextBlock.Blocks>
                </RichTextBlock>

                <Button Grid.Row="3" Grid.Column="0" Content="暂时保留" HorizontalAlignment="Center">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding RemindLater, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>

                <Button Grid.Row="3" Grid.Column="1" Content="马上好评" HorizontalAlignment="Center">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding ReviewNow, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>
        </Border>

        <ScrollViewer Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                      BorderBrush="{StaticResource LineBrush}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="{Binding ContributeVisible}">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Background="{StaticResource FlyoutBackBrush}">
                <RichTextBlock Margin="10 0 10 0" MaxWidth="480" TextWrapping="Wrap" IsTextSelectionEnabled="False"
                               FontSize="20" Foreground="{StaticResource FirstForeBrush}">
                    <RichTextBlock.Blocks>
                        <Paragraph>
                            <LineBreak/>
                            <Run Foreground="Green" Text="Hi，1% ers，如果你觉得ZhiHu Pro给您带来了帮助和便利，那么请赞助任意数额的金钱来支持下我的开发工作吧。"/>
                            <!--<Run Foreground="Green" Text="Hi，1% ers，猴年新春大吉，在此给您拜年啦，感谢您一年来的支持，在新的一年里还请您继续关心鼓励！！！"/>-->
                            <LineBreak/>
                            <!--<LineBreak/>-->
                            <!--<Run Foreground="Red" Text="亲，大过年的，要不要发个红包呀 ^_^ ~_~"/>-->
                            <LineBreak/>
                            <LineBreak/>
                            <Run Text="支付宝：xiaoq416@163.com"/>
                            <LineBreak/>
                            <Run Text="微信：zhaozq-XXX"/>
                            <LineBreak/>
                            <Run Text="微信二维码："/>
                            <LineBreak/>
                            <InlineUIContainer>
                                <Image Margin="0 10 0 0" Source="/Resource/Images/WeChat_Money.PNG" Width="160" HorizontalAlignment="Center"/>
                            </InlineUIContainer>
                            <LineBreak/>
                        </Paragraph>
                    </RichTextBlock.Blocks>
                </RichTextBlock>

                <Button Padding="5 5 5 5" Margin="0 0 60 20" BorderThickness="0" MinHeight="30" MinWidth="50"
                        Background="{StaticResource FollowBackBrush}" Foreground="{StaticResource FollowForeBrush}"                           
                        Content="好哒~" HorizontalAlignment="Right">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding CloseContribute, Mode=OneWay}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </StackPanel>
        </ScrollViewer>

        <Border x:Name="LeaveTip" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="3"
                Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center" 
                Style="{StaticResource TitleBorderStyle}">
            <TextBlock Text="再按一次离开" Margin="12" FontSize="22" HorizontalAlignment="Center" Style="{StaticResource TitleStyle}"/>
        </Border>
    </Grid>
</Page>
